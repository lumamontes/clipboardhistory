import type { NextPage } from 'next'
import Head from 'next/head'
import { useState } from 'react';
import styles from '../styles/Home.module.css'
import { ToastContainer, toast } from 'react-toastify';
interface clipboardItem {
  id: number,
  name: string,
  createdAt: Date;
}
const Home: NextPage = () => {
  const [clipboardItens, setClipboardItens] = useState<clipboardItem[]>([]);

  function handlepaste(e: React.ClipboardEvent) {
    if (e && e.clipboardData && e.clipboardData.types && e.clipboardData.getData) {
      let types = e.clipboardData.types;
      if (((types instanceof DOMStringList) && types.contains("text/html")) || (types.indexOf && types.indexOf('text/html') !== -1)) {
        let pastedData = e.clipboardData.getData('text/plain');
        processPaste(pastedData);
        e.stopPropagation();
        e.preventDefault();
        return false;
      }
    }
  }

  function processPaste(pastedData: string) {
    setClipboardItens(
      [...clipboardItens,
      {
        id: clipboardItens.length + 1,
        name: pastedData,
        createdAt: new Date()
      }]

    );
  }

  const copyToClipboard = (content: string) => {
    toast.dismiss();
    navigator.clipboard.writeText(content);
    toast('ðŸŽ‰ Copiado!', {
      position: "top-right",
      autoClose: 1000,
      hideProgressBar: false,
    });
  }
return (
  <div id="editableDiv" className={styles.container} onPaste={handlepaste}>
    <Head>
      <title>Bookmark Manager</title>
      <meta name="description" content="Generated by create next app" />
      <link rel="icon" href="/favicon.ico" />
    </Head>
    <ToastContainer />
    <main className={styles.main}>
      <h1 className={styles.title}>
        Bookmarks
      </h1>

      <div className={styles.grid}>
        <>
          {clipboardItens.length > 0 && clipboardItens.map((item) => {
            return (
              <div className={styles.cardContainer} key={item.id}>
                <div className={styles.card} onClick={() => copyToClipboard(item.name)}>
                  <p>{item.name}</p>
                </div>
                <span className={styles.code}>
                  {new Intl.DateTimeFormat('pt-BR', { dateStyle: 'short', timeStyle: 'short' })
                    .format(new Date(item.createdAt))
                  }
                </span>
              </div>
            )
          })}
        </>
      </div>
    </main>

    <footer className={styles.footer}>
      <a
        href="https://github.com/lumamontes"
        target="_blank"
        rel="noopener noreferrer"
      >
        Created by Luma ðŸŒˆ
      </a>
    </footer>
  </div>
)
}

export default Home
